C51 COMPILER V9.60.0.0   LCD1602                                                           12/25/2022 22:24:49 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Objects\LCD1602.obj
COMPILER INVOKED BY: F:\Applications\KeilV5\C51\BIN\C51.EXE LCD1602.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND 
                    -PRINT(.\Listings\LCD1602.lst) TABS(2) OBJECT(.\Objects\LCD1602.obj)

line level    source

   1          #include "LCD1602.h"
   2          
   3          void Delayt40us(int t)    //@12.000MHz
   4          {
   5   1        int n=20*t;
   6   1        while(n--);
   7   1      }
   8          
   9          void LCD_write_command(uchar command)
  10          {
  11   1        LCD_RS=0;
  12   1        LCD_RW=0;
  13   1        LCD_DB=command;
  14   1        
  15   1        LCD_E=1;LCD_E=0;//给一个下降沿
  16   1        
  17   1        Delayt40us(1);
  18   1      }
  19          
  20          void LCD_init()
  21          {
  22   1        //不知道是什么玄学问题
  23   1        //重复四次就完事了
  24   1        LCD_write_command(0x38);//设置 8 位格式，2 行，5x7
  25   1        Delayt40us(1);
  26   1        LCD_write_command(0x38);
  27   1        Delayt40us(1);
  28   1        LCD_write_command(0x38);
  29   1        Delayt40us(1);
  30   1        LCD_write_command(0x38);
  31   1        Delayt40us(1);
  32   1        
  33   1        LCD_write_command(0x0c);//整体显示，关光标，不闪烁
  34   1        LCD_write_command(0x06);//设定输入方式，增量不移位
  35   1        LCD_write_command(0x01);//清除屏幕显示
  36   1        Delayt40us(10);
  37   1      }
  38          
  39          void LCD_write_data(uchar dat)
  40          {
  41   1        LCD_RS=1;
  42   1        LCD_RW=0;
  43   1        LCD_DB=dat; 
  44   1        LCD_E=1;LCD_E=0;//给一个下降沿  
  45   1        Delayt40us(1);
  46   1      }
  47          
  48          //公有接口
  49          void LCD_clear()
  50          {
  51   1        LCD_write_command(0x01);
  52   1        Delayt40us(5);//不延时可能会导致写入的字符被擦
  53   1      }
  54          
C51 COMPILER V9.60.0.0   LCD1602                                                           12/25/2022 22:24:49 PAGE 2   

  55          void LCD_disp_char(uchar y,uchar x,uchar dat)//x 0~16 y 1~2
  56          {
  57   1        uchar address;
  58   1        
  59   1        //第一位固定为1，后三位决定行，再后四位决定列
  60   1        if(y==1) address=0x80+x;//1000_0000+x
  61   1        else address=0xc0+x;//1100_0000+1
  62   1        
  63   1        LCD_write_command(address);
  64   1        LCD_write_data(dat);
  65   1      }
  66          
  67          void LCD_disp_string(uchar y,uchar x,uchar * str)
  68          {
  69   1        uchar address;int i=0;uchar j=15-x;
  70   1        uchar flag=1;
  71   1        
  72   1        if(y==1) address=0x80+x;//1000_0000+x
  73   1        else address=0x80+0x40+x;//1100_0000+x
  74   1        
  75   1        LCD_write_command(address);
  76   1        while(str[i]!='\0')
  77   1        { 
  78   2          LCD_write_data(str[i]);
  79   2          i++;
  80   2          if(y==1&&i>j&&flag) {LCD_write_command(0x80+0x40);flag=0;}
  81   2        }
  82   1      }
  83          void LCD_disp_number(uchar x,uchar y,int dat)
  84          {
  85   1        uchar datSize=0,tmp[6],res[6],i,tdatSize;
  86   1        if(dat<0){
  87   2          dat=-dat;
  88   2          LCD_disp_string(x,y,"-"); 
  89   2          y++;
  90   2          if(y>15){x++,y=0;}
  91   2        }
  92   1        
  93   1        while(dat){
  94   2          tmp[datSize]=dat%10;
  95   2          dat/=10;
  96   2          datSize++;
  97   2        }
  98   1        tmp[datSize]='\0';
  99   1        res[datSize]='\0';
 100   1        tdatSize=datSize;
 101   1        for(i=0;i<tdatSize;i++)
 102   1        {
 103   2          res[i]=tmp[--datSize];
 104   2          res[i]=res[i]+'0';
 105   2        }
 106   1        LCD_disp_string(x,y,res);
 107   1      }
 108            


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    537    ----
   CONSTANT SIZE    =      2    ----
   XDATA SIZE       =   ----      26
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
C51 COMPILER V9.60.0.0   LCD1602                                                           12/25/2022 22:24:49 PAGE 3   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
